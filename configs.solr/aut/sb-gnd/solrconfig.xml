<?xml version="1.0" encoding="UTF-8" ?>

<!--
History
=======
16.07.2012   osc
- Uebernahme der Anpassungen von hip
- Anpassen der Struktur an die von SOLR 4.0 ALPHA
- Anpassungen fuer das Highlighting (sb-bbfull-01)
- Aufnahme von replication

-->


<config>


  <luceneMatchVersion>LUCENE_40</luceneMatchVersion>
  <lib dir="${solr.lib.swissbib.dir}/contrib/analysis-extras/lib" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/analysis-extras/lucene-libs" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/clustering/lib" />
  <!-- brauchen wir dataimporthandler?-->
  <lib dir="${solr.lib.swissbib.dir}/contrib/dataimporthandler/lib" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/extraction/lib" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/langid/lib" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/uima/lib" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/uima/lucene-libs" />
  <lib dir="${solr.lib.swissbib.dir}/contrib/velocity/lib" />
  <!-- in diesem Verzeichnis befinden sich die SOLR factories mit denen die Lucene Bibliotheken aus dem Verzeichnis 
       contrib geladen werden
        zur Zeit sind dies:
        apache-solr-analysis-extras-4.0-2012-03-09_11-29-20.jar
        apache-solr-cell-4.0-2012-03-09_11-29-20.jar
        apache-solr-clustering-4.0-2012-03-09_11-29-20.jar
        apache-solr-dataimporthandler-4.0-2012-03-09_11-29-20.jar
        apache-solr-dataimporthandler-extras-4.0-2012-03-09_11-29-20.jar
        apache-solr-langid-4.0-2012-03-09_11-29-20.jar
        apache-solr-uima-4.0-2012-03-09_11-29-20.jar
        apache-solr-velocity-4.0-2012-03-09_11-29-20.jar           
        -->
  <lib dir="${solr.lib.swissbib.dir}/dist/" regex="apache-solr-.*\.jar" /> 
  <dataDir>${solr.data.dir:}</dataDir>
  <directoryFactory name="DirectoryFactory" 
                    class="${solr.directoryFactory:solr.StandardDirectoryFactory}"/>
  <indexConfig>
    <!--
      GH: sollte bei uns eigentlich kaum Sinn machen (Volltexte -TIKA) werden bereits begrenzt
      hÃ¶chstens bei Sammelfeldern mit content aus verschiedenen Bereichen.
      die Einstellung wird wohl global gelten und ist nicht feldbezogen
      maxFieldLength was removed in 4.0. To get similar behavior, include a 
         LimitTokenCountFilterFactory in your fieldType definition. E.g. 
     <filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="10000"/>
       -->
  </indexConfig>
  <jmx />
  <!-- The default high-performance update handler -->
  <updateHandler class="solr.DirectUpdateHandler2">
       <autoCommit> 
       <maxTime>15000</maxTime> 
       <openSearcher>false</openSearcher> 
       </autoCommit>
    <updateLog>
      <str name="dir">${solr.data.dir:}</str>
    </updateLog>
   

  </updateHandler>
  
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Query section - these settings control query time things like caches
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <query>

    <maxBooleanClauses>1024</maxBooleanClauses>


    <filterCache class="solr.FastLRUCache"
                 size="512"
                 initialSize="512"
                 autowarmCount="95%"/>

    <queryResultCache class="solr.LRUCache"
                     size="512"
                     initialSize="512"
                     autowarmCount="95%"/>
   
    <documentCache class="solr.FastLRUCache"
                   size="512"
                   initialSize="512"
                   autowarmCount="95%"/>
    
    <enableLazyFieldLoading>true</enableLazyFieldLoading>

   <queryResultWindowSize>20</queryResultWindowSize>

   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>

    <listener event="newSearcher" class="solr.QuerySenderListener">
      <arr name="queries">

      </arr>
    </listener>
    <listener event="firstSearcher" class="solr.QuerySenderListener">
      <arr name="queries">
        <lst>
          <str name="q">title_long:suche</str>
        </lst>
      </arr>
    </listener>

    <useColdSearcher>false</useColdSearcher>

    <maxWarmingSearchers>2</maxWarmingSearchers>

  </query>


  <!-- Request Dispatcher

       GH: auf false setzen? - in Alpha4.0 defaultwert


    -->
  <requestDispatcher handleSelect="true" >


    <requestParsers enableRemoteStreaming="true" 
                    multipartUploadLimitInKB="2048000" />

    <httpCaching never304="true" />
  </requestDispatcher>

    <!-- GH: nachfolgender handler war frueher mit name="search" default  


      (jetzt select)- wie wird das Ding verwendet? -->

  <requestHandler name="/search" class="solr.SearchHandler">

       
     <lst name="defaults">
       <str name="echoParams">explicit</str>
       <int name="rows">10</int>
       <str name="df">text</str>
     </lst>

    </requestHandler>

  <!-- A request handler that returns indented JSON by default -->
  <requestHandler name="/query" class="solr.SearchHandler">
     <lst name="defaults">
       <str name="echoParams">explicit</str>
       <str name="wt">json</str>
       <str name="indent">true</str>
       <str name="df">text</str>
       </lst>
    </requestHandler>


  <requestHandler name="/get" class="solr.RealTimeGetHandler">
     <lst name="defaults">
       <str name="omitHeader">true</str>
     </lst>
  </requestHandler>

 
  <requestHandler name="/update" 
                  class="solr.UpdateRequestHandler">
       

  </requestHandler>


  <!-- Binary Update Request Handler
       
        GH: Achtung: scheint es in Alpha4 nicht mehr zu geben - raus??
       http://wiki.apache.org/solr/javabin
    -->
  <requestHandler name="/update/javabin" 
                  class="solr.UpdateRequestHandler" />


  <requestHandler name="/update/csv" 
                  class="solr.CSVRequestHandler" 
                  startup="lazy" />

  <requestHandler name="/update/json" 
                  class="solr.JsonUpdateRequestHandler" 
                  startup="lazy" />

  <!-- Solr Cell Update Request Handler

       GH: sollten wir rausnehmen 

    -->
  <requestHandler name="/update/extract" 
                  startup="lazy"
                  class="solr.extraction.ExtractingRequestHandler" >
    <lst name="defaults">
      <!-- All the main content goes into "text"... if you need to return
           the extracted text or do highlighting, use a stored field. -->
      <str name="fmap.content">text</str>
      <str name="lowernames">true</str>
      <str name="uprefix">ignored_</str>

      <!-- capture link hrefs but ignore div attributes -->
      <str name="captureAttr">true</str>
      <str name="fmap.a">links</str>
      <str name="fmap.div">ignored_</str>
    </lst>
  </requestHandler>


  <!-- XSLT Update Request Handler
       GH: vorerst rausnehmen
  -->
  <requestHandler name="/update/xslt"
                   startup="lazy"
                   class="solr.XsltUpdateRequestHandler"/>


  <requestHandler name="/analysis/field" 
                  startup="lazy"
                  class="solr.FieldAnalysisRequestHandler" />


  <requestHandler name="/analysis/document" 
                  class="solr.DocumentAnalysisRequestHandler" 
                  startup="lazy" />

  <requestHandler name="/admin/" 
                  class="solr.admin.AdminHandlers" />


  <!-- ping/healthcheck -->
  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
    <lst name="invariants">
      <str name="q">solrpingquery</str>
    </lst>
    <lst name="defaults">
      <str name="echoParams">all</str>
    </lst>

  </requestHandler>

  <!-- Echo the request contents back to the client -->
  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
    <lst name="defaults">
     <str name="echoParams">explicit</str> 
     <str name="echoHandler">true</str>
    </lst>
  </requestHandler>
  

   

  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
    <str name="queryAnalyzerFieldType">text_spelled</str>
    <lst name="spellchecker">
      <str name="name">sb-spellchecker</str>
      <str name="classname">solr.IndexBasedSpellChecker</str>
      <str name="field">spelltext</str>
      <str name="spellcheckIndexDir">./spellchecker</str>
      <str name="accuracy">0.7</str>
      <str name="buildOnOptimize">true</str>
    </lst>
  </searchComponent>


  <!-- Terms Component

       http://wiki.apache.org/solr/TermsComponent

       A component to return terms and document frequency of those
       terms
    -->
  <searchComponent name="terms" class="solr.TermsComponent"/>

  <!-- A request handler for demonstrating the terms component -->
  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
     <lst name="defaults">
      <bool name="terms">true</bool>
    </lst>     
    <arr name="components">
      <str>terms</str>
    </arr>
  </requestHandler>


  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
    <!-- pick a fieldType to analyze queries -->
    <str name="queryFieldType">string</str>
    <str name="config-file">elevate.xml</str>
  </searchComponent>

  <!-- A request handler for demonstrating the elevator component -->
  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
    </lst>
    <arr name="last-components">
      <str>elevator</str>
    </arr>
  </requestHandler>
  
	<lst name="defaults">
		<!-- use the extended dismax query parser -->
	   <str name="defType">edismax</str>
	  <str name="echoParams">explicit</str>
	  
	  <str name="qf">
	    title_long^50
	    title_short^30
	    title_uniform^5
	    title_series^2
	    authorfull^10
	    publplace
	    
	    subfull^5

	    sfulltext
	    sfullTextRemoteData^0.5
	    
	    syear
	    bibid^1000
	    sbranchlib^100
	    callnum
	    autnum
	  </str>
	  
	  
	  <str name="q.alt">*:*</str>

	  <str name="mm">100%</str>
		
	  <str name="pf">
	    title_long^50
	    sauthor^10
	    submusic^50
	  </str>

	   <int name="ps">2</int>
	   <float name="tie">0.1</float>		
	   <str name="fl">*,score</str>
	   <str name="rows">25</str>
	  
  <!-- boost functions -->
  <str name="boost">recip(abs(ms(NOW/DAY,sfreshness)),3.16e-10,1,1)</str>
  <str name="boost">if(exists(query({!type=lucene df=title_journal v=$q})),6,1)</str>
	  
	  <!-- debugging -->
	  <!--<str name="debugQuery">on</str>-->

      <!-- 
	    Spellchecking 
	  -->
	  
	  <!-- which spell checker to use -->
	  <str name="spellcheck.dictionary">sb-spellchecker</str>
	  <!-- generate suggestions automatically -->
	  <str name="spellcheck">true</str>
	  <!-- omp = Only More Popular 
	    suggestions that return more results than the existing query -->
	  <str name="spellcheck.onlyMorePopular">false</str>
	  <!-- exr = Extended Results
	    additional info (i.e. frequency) -->
	  <str name="spellcheck.extendedResults">false</str>
	  <!--  The number of suggestions to return -->
	  <str name="spellcheck.count">5</str>
	  <!-- Regenerate the user query with replaced tokens -->
	  <str name="spellcheck.collate">true</str>
	  <!-- check collations -->
	  <str name="spellcheck.maxCollations">2</str>
	  <!-- max correction/combinations to check -->
	  <str name="spellcheck.maxCollationEvaluations">10000</str>
	  <!-- information about collate -->
	  <str name="spellcheck.collateExtendedResults">true</str>

	  <!-- More like this -->
		<!-- fields with boosts -->
<!--		<str name="mlt.qf">
			stitle^1
			sauthor^0.6
			subtop^0.2 subgeo^0.2 subform^0.2
       </str>-->
	   
	   <!-- fields: preferably with termVectors="true" -->
       <!--<str name="mlt.fl">stitle,sauthor,subtop,subgeo,subform</str>-->
	   
	   <!-- how many similar docs to return per result -->
       <!--<int name="mlt.count">3</int>-->
	   
	   
	   <!-- ===
	        Highlighting 
	        ===
	   -->

     <str name="hl">true</str>
	   <str name="hl.fl">sfullTextRemoteData</str>
      <str name="hl.snippets">1</str>
	   <!-- use the FastVectorHiglighter -->
	   <str name="hl.useFastVectorHighlighter">true</str>
      
	   <str name="hl.mergeContiguous">true</str>
	   <!-- use the whole content as fragment -->
      <str name="hl.fragListBuilder">simple</str>
      
      <str name="hl.fragsize">250</str>
      <!-- use tag b for table of contents (osc/12.07.2012)-->
      <str name="hl.fragmentsBuilder">tocfragment</str>
	   <str name="hl.requireFieldMatch">true</str>
	   <str name="hl.usePhraseHighlighter">true</str>
	</lst>

    <arr name="last-components">
        <str>spellcheck</str>
    </arr>



<!-- Highlighting Component
     http://wiki.apache.org/solr/HighlightingParameters
-->
<searchComponent class="solr.HighlightComponent" name="highlight">
   <highlighting>

   <fragmenter name="regex" 
                  class="solr.highlight.RegexFragmenter">
     <lst name="defaults">
       <!-- slightly smaller fragsizes work better because of slop -->
       <int name="hl.fragsize">70</int>
       <!-- allow 50% slop on fragment sizes -->
       <float name="hl.regex.slop">0.5</float>
       <!-- a basic sentence pattern -->
       <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
     </lst>
   </fragmenter>

   <!-- Configure the standard formatter -->
   <formatter name="html" 
                 default="true"
                 class="solr.highlight.HtmlFormatter">
     <lst name="defaults">
       <str name="hl.simple.pre"><![CDATA[<em>]]></str>
       <str name="hl.simple.post"><![CDATA[</em>]]></str>
     </lst>
   </formatter>

   <!-- Configure the standard encoder -->
   <encoder name="html" class="solr.highlight.HtmlEncoder" />

   <!-- Configure the standard fragListBuilder -->
   <fragListBuilder name="simple" default="true" class="solr.highlight.SimpleFragListBuilder"/>

   <!-- Configure the single fragListBuilder -->
   <fragListBuilder name="single" class="solr.highlight.SingleFragListBuilder"/>
   
   <!-- default tag FragmentsBuilder -->
   <fragmentsBuilder name="default" 
                     default="true"
                     class="solr.highlight.ScoreOrderFragmentsBuilder">
   </fragmentsBuilder>

	<!-- fragment builder for TOC-Fragments of swissbib (osc/12.07.2012) -->
	<fragmentsBuilder name="tocfragment" class="solr.highlight.ScoreOrderFragmentsBuilder">
     <lst name="defaults">
			<str name="hl.tag.pre"><![CDATA[<b>]]></str>
			<str name="hl.tag.post"><![CDATA[</b>]]></str>
     </lst>
   </fragmentsBuilder>

    <!-- multi-colored tag FragmentsBuilder -->
    <!-- not in use by swissbib (3.11.2011/osc) -->
    <fragmentsBuilder name="colored" 
                        class="solr.highlight.ScoreOrderFragmentsBuilder">
      <lst name="defaults">
        <str name="hl.tag.pre"><![CDATA[
               <b style="background:yellow">,<b style="background:lawgreen">,
               <b style="background:aquamarine">,<b style="background:magenta">,
               <b style="background:palegreen">,<b style="background:coral">,
               <b style="background:wheat">,<b style="background:khaki">,
               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
        <str name="hl.tag.post"><![CDATA[</b>]]></str>
      </lst>
    </fragmentsBuilder>

    <boundaryScanner name="default" 
                       default="true"
                       class="solr.highlight.SimpleBoundaryScanner">
      <lst name="defaults">
        <str name="hl.bs.maxScan">10</str>
        <str name="hl.bs.chars">.,!? &#9;&#10;&#13;</str>
      </lst>
    </boundaryScanner>
    
    <!-- not in use by swissbib (03.11.2011/osc) -->
    <boundaryScanner name="breakIterator" 
                     class="solr.highlight.BreakIteratorBoundaryScanner">
      <lst name="defaults">
        <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->
        <str name="hl.bs.type">WORD</str>
        <!-- language and country are used when constructing Locale object.  -->
        <!-- And the Locale object will be used when getting instance of BreakIterator -->
        <str name="hl.bs.language">en</str>
        <str name="hl.bs.country">US</str>
      </lst>
    </boundaryScanner>
  </highlighting>
</searchComponent>

    <queryResponseWriter name="json" class="solr.JSONResponseWriter">
     <!-- For the purposes of the tutorial, JSON responses are written as
      plain text so that they are easy to read in *any* browser.
      If you expect a MIME type of "application/json" just remove this override.
    --> 
        <str name="content-type">text/plain; charset=UTF-8</str>
    </queryResponseWriter>

    <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
        <int name="xsltCacheLifetimeSeconds">5</int>
    </queryResponseWriter>

    <!-- Legacy config for the admin interface -->
    <admin>
        <defaultQuery>*:*</defaultQuery>

    <!-- configure a healthcheck file for servers behind a
         loadbalancer 
      -->
    <!--
       <healthcheck type="file">server-enabled</healthcheck>
      -->
    </admin>

</config>